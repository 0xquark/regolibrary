name: export

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ closed ]

jobs:
  once:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
        name: checkout repo content

      - name: Set up Go
        uses: actions/setup-go@v2
        with: 
          go-version: 1.17

      - name: Test Regoes
        working-directory: testrunner
        run:  go test -v rego_test.go -run TestAllRules
        
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: Release v1.0.${{ github.run_number }}
          draft: false
          prerelease: false
  build:
    env:
        RELEASE: v1.0.${{ github.run_number }} 
    name: Create cross-platform release build, tag and upload binaries
    needs: once
    runs-on: ubuntu-latest
    strategy:
      matrix:
        json_file: [ nsa , mitre, armobest, frameworks, controls, rules, default_config_inputs ]
    steps:
      - uses: actions/checkout@v2
        name: checkout repo content

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed
      - name: execute py script # run the run.py to get the latest data
        run: |
          python ./scripts/export.py

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: release/${{ matrix.json_file }}.json
          asset_name: ${{ matrix.json_file }}
          asset_content_type: application/octet-stream
  csv:
    name: Upload csv binaries
    needs: once
    runs-on: ubuntu-latest
    strategy:
      matrix:
        csv-files: [ControlID_RuleName, FWName_CID_CName]
    steps:
      - uses: actions/checkout@v2
        name: checkout repo content

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed
      - name: execute py script # run the run.py to get the latest data
        run: |
          python ./scripts/export.py
          
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: release/${{ matrix.csv-files }}.csv
          asset_name: ${{ matrix.csv-files }}
          asset_content_type: application/octet-stream
          